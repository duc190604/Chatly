import { createTransport, Transporter } from "nodemailer";
import { Injectable } from "@nestjs/common";
import { ConfigService } from "@nestjs/config";

@Injectable()
export class MailerService {
  private transporter: Transporter;
  constructor(private configService: ConfigService) {
    this.transporter = createTransport({
      service: "smtp",
      host: this.configService.get<string>("SMTP_HOST"),
      port: parseInt(this.configService.get<string>("SMTP_PORT")||"465"),
      secure: true,
      auth: {
        user: this.configService.get<string>("SMTP_USER"), 
        pass: this.configService.get<string>("SMTP_PASS"),
      },
    });
  }
  async onModuleInit() {
    this.transporter.verify((error, success) => {
      if (error) {
        console.error('SMTP Connection Failed:', error);
      } else {
        console.log('SMTP Server connected successfully ');
      }
    });

  }
  async sendVerifyEmail (to:string, code:number)  {
    try {
      const mailOptions = {
        from: '"Chatly Support" <no-reply@chatly.com>',
        to,
        subject: "üìß X√°c th·ª±c ƒë·ªãa ch·ªâ email c·ªßa b·∫°n",
        html: `
    <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
      <h2>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Chatly!</h2>
      <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n.</p>
      <p>ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c th·ª±c sau:</p>
      <div style="text-align: center; margin: 20px 0;">
        <span style="font-size: 24px; color: #ff5733; font-weight: bold;">${code}</span>
      </div>
      <p>M√£ x√°c th·ª±c c√≥ hi·ªáu l·ª±c trong v√≤ng <strong>30 ph√∫t</strong>.</p>
      <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y.</p>
      <hr>
      <p style="font-size: 12px; color: #888;">Chatly - N∆°i k·∫øt n·ªëi m·ªçi ng∆∞·ªùi.</p>
    </div>
  `
      };

      await this.transporter.sendMail(mailOptions);
    } catch (error) {
      console.error(error);
      throw error;
    }
  };
  async sendResetPasswordEmail(to:string, code:number)  {
    try {
      const mailOptions = {
        from: '"Chatly Support" <no-reply@chatly.com>',
        to,
        subject: "Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n",
        html: `
    <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
      <h2>Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
      <p>Xin ch√†o,</p>
      <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.</p>
      <p>M√£ x√°c th·ª±c c·ªßa b·∫°n l√†:</p>
      <div style="text-align: center; margin: 20px 0;">
        <span style="font-size: 24px; color: #ff5733; font-weight: bold;">${code}</span>
      </div>
      <p>M√£ n√†y c√≥ hi·ªáu l·ª±c trong v√≤ng <strong>30 ph√∫t</strong>. Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
      <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, b·∫°n c√≥ th·ªÉ b·ªè qua email n√†y.</p>
      <hr>
      <p style="font-size: 12px; color: #888;">C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng Chatly.</p>
    </div>
  `
      };

      await this.transporter.sendMail(mailOptions);
    } catch (error) {
      console.error(error);
      throw error;
    }
  };
}